lines(abs(hilbert(eegb[chan,])), type='l', col='blue')
coef <- butter(forder, c(lf, hf) / (boardinfo$samplerate/2), 'pass')
lf = 8, hf = 12,
forder = 6
coef <- butter(forder, c(lf, hf) / (boardinfo$samplerate/2), 'pass')
lf = 8
hf = 12
coef <- butter(forder, c(lf, hf) / (boardinfo$samplerate/2), 'pass')
eegchan <- t(apply(poll[1:8,], 1, function(x) filtfilt(coef, x)))
dim(eegchan)
eeghilb <- apply(eegchan, 1, function(x) abs(hilbert(x)))
dim(eeghilb)
eegchan <- t(apply(poll[1:8,], 1, function(x) filtfilt(coef, x)))
eeghilb <- t(apply(eegchan, 1, function(x) abs(hilbert(x))))
bphilbert <- function(poll, boardinfo, lf = 8, hf = 12,
forder = 6){
coef <- butter(forder, c(lf, hf) / (boardinfo$samplerate/2), 'pass')
eegchan <- t(apply(poll[1:8,], 1, function(x) filtfilt(coef, x)))
eeghilb <- t(apply(eegchan, 1, function(x) abs(hilbert(x))))
pollback <- rbind(eeghilb, poll[9,])
}
eegf  <- lpfilt(eegm, boardinfo, 40)
eegb  <- bpfilt(eegm, boardinfo, 8, 12)
eegh  <- bphilbert(eegm, boardinfo, 8, 12)
chan=6
plot(eegm[chan,], type='l')
lines(eegf[chan,], type='l', col='red')
lines(eegb[chan,], type='l', col='blue')
lines(eegh[chan,], type='l', col='green')
install.packages("dbcsp")
dim(eegm)
sample(c(1,2), 10)
dummyConditions <- sample(c(1,2), 10, replace = TRUE)
dummyConditions
sample(c(rep(1,5), rep(2,5))
)
cspdata <- list(list(), list())
cspdata[[1]][1]
cspdata[[1]][2]
cspdata[[1]][end]
append(cspdata[[1]])
?append
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
cspdata <- list(list(), list())
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata[[dummyConditions]] <- c(cspdata[[dummyConditions]], list(eegf))
}
polls
cspdata
cspdata <- list()
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
cspdata
c(cspdata, list(rnorm(3)))
c(cspdata[[1]], list(rnorm(3)))
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions]], list(eegf))
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
cspdata
str(cspdata)
addCSP <- function(eeg, csp, condition){
eeg <- eeg[1:8,] # remove marker
csp[[condition]] <- c(csp[[condition]], list(eeg))
}
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, coondition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
source('./filterFuncs.r')
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, coondition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
source('./filterFuncs.r')
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, coondition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
cspdata
str(cspdata)
cspdata[[1]]
cspdata[[2]]
cspdata <- list(X1, X2)
cspdata[[1]] <- c(cspdata[[1]], list(eegm))
cspdata[[1]] <- c(cspdata[[1]], list(eegm))
cspdata[[1]] <- c(cspdata[[1]], list(eegm))
cspdata
str(cspdata)
cspdata[[2]] <- c(cspdata[[2]], list(eegm))
str(cspdata)
addcsp <- function(eeg, csp, condition){
eeg1 <- eeg[1:8,] # remove marker
csp[[condition]] <- c(csp[[condition]], list(eeg1))
}
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
csp
cspdata
str(cspdata)
eegf
dim(eegf)
cspdata <- list(X1, X2)
polls=1
eeg <- eegf
csp <- cspdata
dummyConditions[polls]
polls
condition=1
eeg1 <- eeg[1:8,] # remove marker
csp[[condition]] <- c(csp[[condition]], list(eeg1))
condition=2
csp[[condition]] <- c(csp[[condition]], list(eeg1))
csp
str(csp)
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
print(polls)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
print(polls)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
cspdata
str(cspdata)
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
cspdata
c(cspdata[[1]], list(eeg))
cspdata[[1]] <- c(cspdata[[1]], list(eeg))
cspdata
str(cspdata)
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
#print(polls)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
source('./filterFuncs.r')
boardinfo <- setBoardInfo(1) # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
#print(polls)
cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
#cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
boardinfo <- setBoardInfo(1) # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
#print(polls)
#cspdata <- addcsp(eegf, cspdata, condition = dummyConditions[polls])
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
cspdata
str(cspdata)
mydbcsp <- new('dbcsp', X1=cspdata[[1]], X2=cspdata[[2]], type='dtw')
library(dbcsp)
mydbcsp <- new('dbcsp', X1=cspdata[[1]], X2=cspdata[[2]], type='dtw')
library(dbspc)
library(dbscp)
library(dbcsp)
is.list(cspdata[[1]])
is.list(cspdata[[2]])
mydbcsp <- new('dbcsp', X1=cspdata[[1]], X2=cspdata[[2]])
mydbcsp <- new('dbcsp', X1=list(cspdata[[1]]), X2=list(cspdata[[2]])
)
X1
X1 = cspdata[[1]]
is.list(X1)
X2 = cspdata[[2]]
mydbcsp <- new('dbcsp', X1, X2)
X1
X1[1]
dim(X1[1])
dim(X1[[1]])
AR.data
str(AR.data)
str(cspdata)
str(AR.data)
x1 <- AR.data$come
x2 <- AR.data$five
str(x1)
str(x2)
mydbcsp <- new('dbcsp', X1=x1, X2=x2, q=15, labels=c("C1", "C2"))
summary(mydbcsp)
mydbcsp <- new('dbcsp', X1=cspdata[[1]], X2=cspdata[[2]], q = 8,type='dtw')
summary(mydbcsp)
boardinfo <- setBoardInfo(1) # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10
dummyConditions <- sample(c(rep(1,5), rep(2,5)))
X1 <- list(); X2 <- list()
cspdata <- list(X1, X2)
while(polls < npolls){
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
polls <- polls + 1
poll  <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg   <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eegm  <- demean(eeg)
eegf  <- lpfilt(eegm, boardinfo, 40)
cspdata[[dummyConditions[polls]]] <- c(cspdata[[dummyConditions[polls]]], list(eegf[1:8,]))
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
mydbcsp <- new('dbcsp', X1=cspdata[[1]], X2=cspdata[[2]], q = 8, type='dtw',
labels = c('left', 'right'))
summary(mydbcsp)
boxplot(mydbcsp)
x1 <- AR.data$come
x2 <- AR.data$five
mydbcsp <- new('dbcsp', X1=x1, X2=x2, q=15, labels=c("C1", "C2"))
summary(mydbcsp)
selectQ(mydbcsp)
train(mydbcsp, selected_q = 2)
X2
x2
x2[[1:5]]
x2[1:5]
str(x2[1:5])
xt = x2[1:5]
predict(mydbcsp, X_test=xt)
myd <- train(mydbcsp, selected_q = 2)
xt = x2[1:5]
predict(myd, X_test=xt)
