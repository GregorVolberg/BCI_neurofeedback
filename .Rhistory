eeg  <- demean(eeg)
t(eeg)
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
t(poll)
dim(poll)
c(boardinfo$eegchannels, boardinfo$markerchannel)
poll[24,]
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
t(poll)
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
t(eeg)
source('./helperFunctions.r')
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
t(eeg)
c(boardinfo$eegchannels, boardinfo$markerchannel)
boardinfo <- setBoardInfo() # see helper functions
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
t(eeg)
eeg <- lpfilt(eeg, boardinfo)
t(eeg)
eeg <- data.frame(t(poll)) %>%
setNames(boardinfo$channames)
head(eeg)
pp=eeg
data.frame(t(pp))
data.frame(pp)
eeg
pp
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg
data.framet(eeg)
data.frame(t(eeg))
source('./helperFunctions.r')
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling start
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10 #
begsample <- NULL
endsample <- NULL
while(polls < npolls){
polls <- polls + 1
begsample[polls]  <- previousSample + 1
endsample[polls]  <- previousSample + boardinfo$pollnum
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg <- lpfilt(eeg, boardinfo)
plotEEG(poll, boardinfo, polls)
previousSample <- endsample[polls]
}
eeg
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg <- lpfilt(eeg, boardinfo)
eeg
poll=eeg
eeg <- data.frame(t(poll)) %>%
setNames(boardinfo$channames) %>%
ts(., frequency = boardinfo$samplerate, start = 0)
eeg
plot(eeg, col = plotcols[isArtifact + 1],
main = paste0('EEG, polling interval ', polls))
plot(eeg)
source('./helperFunctions.r')
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling start
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10 #
begsample <- NULL
endsample <- NULL
while(polls < npolls){
polls <- polls + 1
begsample[polls]  <- previousSample + 1
endsample[polls]  <- previousSample + boardinfo$pollnum
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg <- lpfilt(eeg, boardinfo)
plotEEG(poll, boardinfo, polls)
previousSample <- endsample[polls]
}
source('./helperFunctions.r')
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling start
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10 #
begsample <- NULL
endsample <- NULL
while(polls < npolls){
polls <- polls + 1
begsample[polls]  <- previousSample + 1
endsample[polls]  <- previousSample + boardinfo$pollnum
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg <- lpfilt(eeg, boardinfo)
plotEEG(eeg, boardinfo, polls)
previousSample <- endsample[polls]
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
source('./helperFunctions.r')
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
### polling start
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10 #
begsample <- NULL
endsample <- NULL
while(polls < npolls){
polls <- polls + 1
begsample[polls]  <- previousSample + 1
endsample[polls]  <- previousSample + boardinfo$pollnum
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
eeg  <- demean(eeg)
eeg <- lpfilt(eeg, boardinfo)
plotEEG(eeg, boardinfo, polls)
previousSample <- endsample[polls]
}
myboard$stop_stream()     # stop stream
myboard$release_session() # end session
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
library(tidyverse)
library(brainflow)
library(DescTools)
library(signal)
source('./helperFunctions.r')
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
Id      <- brainflow_python$BoardIds$PLAYBACK_FILE_BOARD
params  <- brainflow_python$BrainFlowInputParams()
params$file         <- "scene_aff_visual_2024-05-07-103106.csv"
params$master_board <- brainflow_python$BoardIds$CYTON_BOARD
myboard             <- brainflow_python$BoardShim(Id, params)
boardinfo <- setBoardInfo() # see helper functions
myboard$release_all_sessions()
myboard$prepare_session() # start session
myboard$start_stream()    # start stream
previousSample <- myboard$get_board_data_count()
invisible(myboard$get_board_data()) # empty buffer
polls <- 0
npolls <- 10 #
begsample <- NULL
endsample <- NULL
polls <- polls + 1
begsample[polls]  <- previousSample + 1
endsample[polls]  <- previousSample + boardinfo$pollnum
while (myboard$get_board_data_count() < boardinfo$pollnum) {
Sys.sleep(0.02) # wait until buffer is filled
}
poll <- myboard$get_board_data(as.integer(boardinfo$pollnum))
dim(poll)
eeg  <- poll[c(boardinfo$eegchannels, boardinfo$markerchannel),]
dim(eeg)
switch(ExpCode,
{boardinfo$channames <- c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
boardinfo$channames <- c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
})
ExpCode =1
switch(ExpCode,
{boardinfo$channames <- c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
boardinfo$channames <- c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
})
boardinfo <- NULL
boardinfo <- NULL
switch(ExpCode,
{boardinfo$channames <- c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
boardinfo$channames <- c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
})
boartdinfo
boardinfo
ExpCode =2
boardinfo <- NULL
switch(ExpCode,
{boardinfo$channames <- c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
boardinfo$channames <- c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')
})
boardinfo
switch(ExpCode,
boardinfo$channames <- {c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')},
boardinfo$channames <- {c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')})
ExpCode =2
switch(ExpCode,
boardinfo$channames <- {c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')},
boardinfo$channames <- {c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')})
boardinfo
ExpCode =1
switch(ExpCode,
boardinfo$channames <- {c('F1','F3','C3','C4',
'O1','O2','TP9','TP10', 'Marker')},
boardinfo$channames <- {c('F2','F4','C3','C4',
'O1','O2','TP9','TP10', 'Marker')})
boardinfo
C3	16
k=read.table(clipboard)
k=read.table(file=clipboard)
k=read.table(file=clipboard())
k=read.table(file=clipboard)
k=read.table(file="clipboard")
k
k=read.table(file="clipboard")
k
k$V2
k$V3
k=read.table(file="clipboard")
k1
k$V1
nan(1,10)
numeric(1,10)
numeric(10)
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz"  "Pz"),
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
motorImagery
setBoardInfo <- function(ExpCode){
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
boardinfo <- NULL
switch(ExpCode,
boardinfo$channames <- {motorImagery$name[1:8]},
boardinfo$channames <- {neurofeedback$name[1:8]},
boardinfo$channames <- {sceneAffordanceVisual$name[1:8]})
boardinfo$eegchannels   <- c(2:9)
boardinfo$markerchannel <- c(24)
boardinfo$samplerate    <- c(as.integer(250))
boardinfo$blocksize     <- 1.024 # polling interval, in seconds
boardinfo$pollnum       <- boardinfo$samplerate * boardinfo$blocksize
return(boardinfo)
}
setBoardInfo(1)
setBoardInfo(2)
switch(ExpCode,
{boardinfo$channames <- motorImagery$name[1:8]
boardinfo$REF <- motorImagery$name[9]
boardinfo$GND <- motorImagery$name[10]},
{boardinfo$channames <- neurofeedback$name[1:8]},
{boardinfo$channames <- sceneAffordanceVisual$name[1:8]})
setBoardInfo <- function(ExpCode){
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
boardinfo <- NULL
# switch(ExpCode,
#        boardinfo$channames <- {motorImagery$name[1:8]},
#        boardinfo$channames <- {neurofeedback$name[1:8]},
#        boardinfo$channames <- {sceneAffordanceVisual$name[1:8]})
switch(ExpCode,
{boardinfo$channames <- motorImagery$name[1:8]
boardinfo$REF <- motorImagery$name[9]
boardinfo$GND <- motorImagery$name[10]},
{boardinfo$channames <- neurofeedback$name[1:8]},
{boardinfo$channames <- sceneAffordanceVisual$name[1:8]})
boardinfo$eegchannels   <- c(2:9)
boardinfo$markerchannel <- c(24)
boardinfo$samplerate    <- c(as.integer(250))
boardinfo$blocksize     <- 1.024 # polling interval, in seconds
boardinfo$pollnum       <- boardinfo$samplerate * boardinfo$blocksize
return(boardinfo)
}
setBoardInfo(1)
list('a').chans =c('a', 'b')
list(1).chans =c('a', 'b')
?list
list(motorimagery, neuro)
list(motorImagery, neuro)
list(motorImagery, neurofeedback)
allExperiments <- list(motorImagery, neurofeedback, sceneAffordanceVisual)
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
allExperiments <- list(motorImagery, neurofeedback, sceneAffordanceVisual)
setBoardInfo <- function(ExpCode){
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
allExperiments <- list(motorImagery, neurofeedback, sceneAffordanceVisual)
setBoardInfo <- function(ExpCode){
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
allExperiments <- list(motorImagery, neurofeedback, sceneAffordanceVisual)
boardinfo <- NULL
boardinfo$channames <- allExperiments[[ExpCode]]$name[1:8]
boardinfo$REF <- allExperiments[[ExpCode]]$name[9]
boardinfo$GND <- allExperiments[[ExpCode]]$name[10]
boardinfo$eegchannels   <- c(2:9)
boardinfo$markerchannel <- c(24)
boardinfo$samplerate    <- c(as.integer(250))
boardinfo$blocksize     <- 1.024 # polling interval, in seconds
boardinfo$pollnum       <- boardinfo$samplerate * boardinfo$blocksize
return(boardinfo)
}
setBoardInfo <- function(ExpCode){
motorImagery <- data.frame(name = c('C3','C4','Cz','CP3',
'CP4','C1', "C2", 'CPz',
'AFz', "FCz"),
easyCap = c("16",  "10",  "Ref", "15",
"11",  "5",  "3",  "4",
"19", "1"),
OpenBCI = c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
neurofeedback <- data.frame(name = c("AF1", "AF2", "AFz", "Cz",
"F1",  "Fz",  "C1",  "Cz",
"Oz",  "Pz"),
easyCapNumber = numeric(10),
OpenBCI =  c("N1P", "N2P", "N3P", "N4P", "N5P",
"N6P", "N7P", "N8P",
"SRB2(REF)", "BIAS(GND)"))
sceneAffordanceVisual <- data.frame(name = c('F2','F4','C3','C4',
'O1','O2','TP9','TP10',
NaN, NaN),
easyCapNumber = numeric(10),
OpenBCIpin    = c("N1P", "N2P", "N3P", "N4P",
"N5P", "N6P", "N7P", "N8P",                                                     "SRB2(REF)", "BIAS(GND)"))
allExperiments <- list(motorImagery, neurofeedback, sceneAffordanceVisual)
boardinfo <- NULL
boardinfo$channames <- allExperiments[[ExpCode]]$name[1:8]
boardinfo$REF <- allExperiments[[ExpCode]]$name[9]
boardinfo$GND <- allExperiments[[ExpCode]]$name[10]
boardinfo$eegchannels   <- c(2:9)
boardinfo$markerchannel <- c(24)
boardinfo$samplerate    <- c(as.integer(250))
boardinfo$blocksize     <- 1.024 # polling interval, in seconds
boardinfo$pollnum       <- boardinfo$samplerate * boardinfo$blocksize
return(boardinfo)
}
setBoardInfo(1)
setBoardInfo(2)
setBoardInfo(3)
